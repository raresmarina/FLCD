def -> (-1, -1)
a - 0 -> (7, 0)
integer -> (-1, -1)
; -> (-1, -1)
def -> (-1, -1)
b - 0 -> (8, 0)
integer -> (-1, -1)
; -> (-1, -1)
def -> (-1, -1)
sum - 0 -> (11, 0)
integer -> (-1, -1)
; -> (-1, -1)
def -> (-1, -1)
rem - 0 -> (9, 0)
integer -> (-1, -1)
; -> (-1, -1)
def -> (-1, -1)
i - 0 -> (0, 0)
; -> (-1, -1)
def -> (-1, -1)
answer - 0 -> (11, 1)
[ -> (-1, -1)
20 - 1 -> (8, 1)
] -> (-1, -1)
string -> (-1, -1)
; -> (-1, -1)
sum - 0 -> (11, 0)
<- -> (-1, -1)
a - 0 -> (7, 0)
+ -> (-1, -1)
b - 0 -> (8, 0)
; -> (-1, -1)
answer - 0 -> (11, 1)
<- -> (-1, -1)
"Prime" - 1 -> (7, 1)
; -> (-1, -1)
Floop - 0 -> (2, 0)
( -> (-1, -1)
i - 0 -> (0, 0)
= -> (-1, -1)
2 - 1 -> (5, 0)
: -> (-1, -1)
<= -> (-1, -1)
sum - 0 -> (11, 0)
/ -> (-1, -1)
2 - 1 -> (5, 0)
) -> (-1, -1)
{ -> (-1, -1)
rem - 0 -> (9, 0)
<- -> (-1, -1)
n - 0 -> (5, 1)
% -> (-1, -1)
i - 0 -> (0, 0)
; -> (-1, -1)
verif -> (-1, -1)
( -> (-1, -1)
rem - 0 -> (9, 0)
= -> (-1, -1)
= -> (-1, -1)
0 - 1 -> (3, 0)
) -> (-1, -1)
answer - 0 -> (11, 1)
<- -> (-1, -1)
"not prime" - 1 -> (3, 1)
; -> (-1, -1)
} -> (-1, -1)
print -> (-1, -1)
( -> (-1, -1)
answer - 0 -> (11, 1)
) -> (-1, -1)
; -> (-1, -1)
